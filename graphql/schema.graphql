#import user.graphql
#import post.graphql
#import comment.graphql
#import note.graphql

"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    me: User @auth

    user(id: ID @eq): User @find
    users: [User!]! @paginate(defaultCount: 15, maxCount: 50) @orderBy(column: "age", direction: "DESC")
    teenagers: [User!] @field(resolver: "TeenagerResolver")
    users_between(min_age: Int!, max_age: Int!, page: Int): [User!]
    @paginate(defaultCount: 5, maxCount: 50, builder: "App\\GraphQL\\Queries\\UserBetweenResolver")

    posts: [Post!]! @paginate
    post(id: Int! @eq): Post @find

    note(id: ID! @eq): Note @find @can(ability: "view", find: "id")
}

type Mutation {
    createUser(
        name: String!
        email: String! @rules(apply: ["email"]) # バリデーション（Emailの形式であること）
        password: String!
    ): User! @create

    updateUser(
        id: ID!
        name: String
    ): User @update
}

